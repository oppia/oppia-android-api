syntax = "proto3";

package org.oppia.proto.v1.structure;

import "org/oppia/proto/v1/versions/structure_versions.proto";

option java_package = "org.oppia.proto.v1.structure";
option java_multiple_files = true;

// NOTE: many of the structures in this file share a common LanguageProtosVersion version. See the
// documentation on that structure for details as to why.

// The language types supported by this API. These are used both for content string localization and
// to represent voiceover subtitles. Note that any changes to this structure will correspond to
// changes to LanguageProtosVersion (similar to the proto structures that use this version below).
// Note also that from a design perspective, languages should always be represented using this as a
// strong type rather than string-based language codes which can introduce support issues and
// inconsistencies.
enum LanguageType {
  option (org.oppia.proto.v1.versions.structure_enum_version_type) = LANGUAGE_PROTOS_VERSION;

  // The default language. This generally corresponds to cases when a language isn't defined, is
  // unsupported, or it's not known whether the language is supported. Clients are expected to
  // default to no-op behaviors when they encounter this language type.
  LANGUAGE_CODE_UNSPECIFIED = 0;

  // Corresponds to general English (that is, not particularly regionally tied). This is the assumed
  // default language for all content strings.
  ENGLISH = 1;

  // Corresponds to general Arabic (that is, not particularly regionally tied).
  ARABIC = 2;

  // Corresponds to general Hindi (that is, not particularly regionally tied).
  HINDI = 3;

  // Corresponds to the macaronic language Hinglish which combines Hindi and English. This
  // corresponds to a generic 'Hinglish' which combines localisms from different areas, but is not
  // predominantly tied to a particular region.
  HINGLISH = 4;

  // Corresponds to a regional Portuguese that's primarily used in Brazil.
  BRAZILIAN_PORTUGUESE = 5;
}

// Represents a block of (subtitled) text. This structure is used for content strings so that they
// may be supplemented with audio translations, or localized by replacing the text string with a
// language-specific translation of it.
//
// Note that this represents both ASCII & Unicode HTML & plain text strings, and combines two
// different Oppia's backend structures ('SubtitledHtml' and 'SubtitledUnicode'). Protobuf takes
// care of properly representing Unicode strings internally by using UTF-8 encoding, so no special
// care is needed by implementations or clients.
message SubtitledTextDto {
  option (org.oppia.proto.v1.versions.structure_proto_version_type) = LANGUAGE_PROTOS_VERSION;

  // The version defining the internal structure of this message.
  org.oppia.proto.v1.versions.LanguageProtosVersion protos_version = 1;

  // The content ID for this text that can be used to retrieve a voiceover or translation
  // representation of this text. This ID is unique in its local context (e.g. a 'State' for
  // subtitled texts used within states).
  string content_id = 2;

  // The user-readable HTML/plain text content (which may be in Unicode). This is expected to always
  // be in English, and in situations where non-English variants are desired the content ID should
  // be matched to a language-specific translation (see WrittenTranslations for details).
  string text = 3;
}

// Represents a group of voiceovers that correspond to subtitled texts in a particular content
// context (such as a revision card or a 'State' in an exploration).
message RecordedVoiceoversDto {
  option (org.oppia.proto.v1.versions.structure_proto_version_type) = LANGUAGE_PROTOS_VERSION;

  // The version defining the internal structure of this message.
  org.oppia.proto.v1.versions.LanguageProtosVersion protos_version = 1;

  // A list of mappings from language to voiceover content mappings (see the message's documentation
  // for specifics on the latter).
  repeated VoiceoverContentMappingDto voiceover_content_mapping = 2;
}

// Represents a mapping of SubtitledText content IDs to voiceovers for a particular language.
message VoiceoverContentMappingDto {
  option (org.oppia.proto.v1.versions.structure_proto_version_type) = LANGUAGE_PROTOS_VERSION;

  // The language corresponding to this mapping.
  LanguageType language = 1;

  // The mapping of SubtitledText content IDs to their corresponding voiceover files.
  map<string, VoiceoverFileDto> voiceover_content_mapping = 2;
}

// Represents an audio file that, when played, reads out content text in a particular language.
message VoiceoverFileDto {
  option (org.oppia.proto.v1.versions.structure_proto_version_type) = LANGUAGE_PROTOS_VERSION;

  // The name of the voiceover audio file. This will never be a URL (and can always be expected to
  // just be a filename). The audio file is stored in GCS static file storage and must be downloaded
  // or streamed separately by the client. The client can expect that this file is immutable on the
  // server. Further, the client can also assume that all audio files are always of the format MP3.
  // There's no support for transcoding audio at a given bitrate, it's always fixed based on the
  // uploaded bitrate (as managed by Oppia's backend).
  string filename = 1;

  // The size of the voiceover file, in bytes.
  uint32 file_size_bytes = 2;

  // The duration of the voiceover audio track, in seconds.
  float duration_secs = 3;
}

// Represents a group of written translations that correspond to subtitled texts in a particular
// content context (such as a revision card or a 'State' in an exploration).
message WrittenTranslationsDto {
  option (org.oppia.proto.v1.versions.structure_proto_version_type) = LANGUAGE_PROTOS_VERSION;

  // The version defining the internal structure of this message.
  org.oppia.proto.v1.versions.LanguageProtosVersion protos_version = 1;

  // A list of mappings from language to written translation content mappings (see the message's
  // documentation for specifics on the latter).
  repeated WrittenTranslationContentMappingDto translation_language_mapping = 2;
}

// Represents a mapping of SubtitledText content IDs to written translations for a particular
// language.
message WrittenTranslationContentMappingDto {
  option (org.oppia.proto.v1.versions.structure_proto_version_type) = LANGUAGE_PROTOS_VERSION;

  // The language corresponding to this mapping.
  LanguageType language = 1;

  // The mapping of SubtitledText content IDs to their corresponding written translations.
  map<string, WrittenTranslationDto> translation_content_mapping = 2;
}

// Represents a single textual translation of specific content text in a particular language.
message WrittenTranslationDto {
  option (org.oppia.proto.v1.versions.structure_proto_version_type) = LANGUAGE_PROTOS_VERSION;

  // The data format of the source material for this translation.
  oneof data_format {
    // Indicates that this translation corresponds to a single piece of text.
    WrittenTranslatableTextDto translatable_text = 1;

    // Indicates that this translation corresponds to a list of translated texts.
    SetOfWrittenTranslatableTextDto set_of_translatable_text = 2;
  }
}

// Represents the translation of a single text string (which may be either plain text or HTML, and
// is generally expected to potentially contain Unicode characters).
message WrittenTranslatableTextDto {
  option (org.oppia.proto.v1.versions.structure_proto_version_type) = LANGUAGE_PROTOS_VERSION;

  // The human-readable translated string.
  string translation = 1;
}

// Represents a set of translated strings. As indicated in WrittenTranslatableText, each string may
// be either plain text or HTML, and generally can be expected to contain Unicode characters.
//
// Note that while the list of translated strings roughly corresponds to the original source
// material (i.e. the default, untranslated content strings specified directly in SubtitledText),
// neither the order nor the length are expected to exactly match.
message SetOfWrittenTranslatableTextDto {
  option (org.oppia.proto.v1.versions.structure_proto_version_type) = LANGUAGE_PROTOS_VERSION;

  // The list of human-readable translated strings.
  repeated string translations = 1;
}
